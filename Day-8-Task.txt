1Q)https://github.com/rvsp/typescript-oops/blob/master/Practice/Movie.md

Answer:-

class Movie {
    constructor(title, studio, rating ="PG" ){
        this.title = title;
        this.studio = studio;
        this.rating = rating;
    }
    getDetails() {
        return ` Movie: ${this.title}, Studio: ${this.studio}, Rating: ${this.rating} `
    }
    getPG(arr) {
        let movies = [];
    }
}

var obj = new Movie("Casino Royale", "Eon Productions", "PG­13");

console.log(obj.getDetails());
console.log(obj.getPG([]));

_______________________________________________
2Q)https://github.com/rvsp/typescript-oops/blob/master/Practice/class-circle.md

Answer:-

class Circle {
    constructor(radius, color){
        this.radius = radius;
        this.color = color;
    }
    toString() {
        return ` radius:${this.radius} color:${this.color} `
    }
    setRadius(radius) {
        this.radius = radius;
    }
    getRadius() {
        return this.radius;
    }
    setColor(color) {
        this.color = color;
    }
    getColor() {
        return this.color;
    }
    getArea(radius) {
        var area = 3.14*radius*radius;
        return ` Area:${area} `;
    }
    getCircumference(radius) {
        var cmf = 2*3.14*radius;
        return ` Circumference:${cmf} `;
    }
}

var obj1 = new Circle("5.0");
var obj2 = new Circle("5.0", "red");
console.log(obj1.getRadius());

console.log(obj2.toString());
console.log(obj2.getArea(5.0));
console.log(obj2.getCircumference(5.0));
________________________________________________
3Q)Write a “person” class to hold all the details.

Answer:-

class Person {
    constructor(name, location) {
        this.name = name;
        this.location = location;
    }
    getPerson() { 
        return ` ${this.name} ${this.location} `;
    }
    greetings() {
        console.log("Welcome to Method Greeting");
    }
    getFood() {
        console.log("I would like to eat pizza");
    }

    static displayWalk() {
        console.log("Iam static method with name Display Walk");
    }
}

var person1 = new Person("Kiran", "Hyderabad");
var food = new Person("Rice"); 

console.log(person1.getPerson());
console.log(person1.greetings());
console.log(food.getFood());
console.log(Person.displayWalk());
________________________________________________
4Q)write a class to calculate uber price.

Answer:-

class Uber {
    constructor(kms, rateperkm) {
        this.kms = kms;
        this.rateperkm = rateperkm;
    }
    getUberPrice() {
        var res = this.kms * this.rateperkm;
        return res;
    }
}

var obj = new Uber("10", "12");
console.log(obj.getUberPrice());


